[{"title":"Morning Drawing #1","date":"August 2, 2020","description":"Coffee... That cool smell and sour bitter taste...","body":"Hello, everybody!\nI am starting to post my art here. If you like it, you can also check my other works on Instagram.\nThis one was a sudden, inspired by cup of coffee and morning chill.\nCreation:\n","ref":"/blog/2020/08/02/morning-drawing-1/"},{"title":"Authenticating to the Kubernetes API with client-go","date":"August 1, 2020","description":"You would learn how to authenticate to the Kubernetes API from an Golang application running inside or outside the Kubernetes cluster","body":"Client-go, go library for talking to a kubernetes cluster, provides few ways for authenticating to the Kubernetes API. Possible steps are quite different for apps which are running inside and outside the cluster.\nYour actions would be quite simple if you planning to pack your golang app in container and use it within pod. Let\u0026rsquo;s look at the example:\nconfig, err := rest.InClusterConfig() if err != nil { panic(err.Error()) // oops, something went wrong, you can\u0026#39;t make calls to k8s API :( } But keep in mind that this approach uses the Service Account token.\nService accounts are usually associated with pods running in the cluster through the ServiceAccount Admission Controller. Bearer tokens are mounted into pods at well-known locations, and allow in-cluster processes to talk to the API server.\nSo, client-go would try to find mounted token at the /var/run/secrets/kubernetes.io/serviceaccount path. In addition, you will need to tweak your Service Account, if you want to perform some opperations within pod and have RBAC enabled. So prepare RBAC Role or ClusterRole and binding for it before deploying your app to the cluster.\nFor working outside of the cluster you can try whis way:\nkubeconfig := clientcmd.NewNonInteractiveDeferredLoadingClientConfig( clientcmd.NewDefaultClientConfigLoadingRules(), \u0026amp;clientcmd.ConfigOverrides{}, ) config, err := kubeconfig.ClientConfig() if err != nil { panic(err.Error()) // oops, something went wrong, you can\u0026#39;t make calls to k8s API :( } This will work if you have kubeconfig file already in place.\nDo you want more flexible approach? Try this:\nvar configPath = \u0026#34;\u0026#34; if value, ok := os.LookupEnv(\u0026#34;KUBECONFIG\u0026#34;); ok { configPath = value } else if _, err :=os.Stat(\u0026#34;~/.kube/config\u0026#34;); err == nil { configPath = \u0026#34;~/.kube/config\u0026#34; } config, err := clientcmd.BuildConfigFromFlags(\u0026#34;\u0026#34;, configPath) if err != nil { panic(err.Error()) // oops, something went wrong, you can\u0026#39;t make calls to k8s API :( } This code snippet will firstly try to get path to kubeconfig from environment variable. If it fails, it will try to find file by default path. This kubeconfig will be used for talking to your cluster.\nBut you can see that I didn\u0026rsquo;t add another else branch with panic() after file searching, so configPath variable will be empty if kubeconfig is missing. Under the hood clientcmd.BuildConfigFromFlags function will try to use \u0026ldquo;in-cluster\u0026rdquo; method, if you pass empty string to it as arguments.\nSo you can treat this variant as hybrid method.\nAfter obtaining config you can finnaly make calls to the Kubernetes API:\nclientSet, err := kubernetes.NewForConfig(config) if err != nil { panic(err.Error()) // ugh, something wrong again \u0026gt;_\u0026lt; } // Simple example from client-go repository: get info about all pods // in cluster with one simple list request pods, err := clientSet.CoreV1().Pods(\u0026#34;\u0026#34;).List(context.TODO(), metav1.ListOptions{}) if err != nil { panic(err.Error()) // your request failed } fmt.Printf(\u0026#34;There are %d pods in the cluster\\n\u0026#34;, len(pods.Items)) I hope the article was useful to you. Come here more often.\n","ref":"/blog/2020/08/01/k8s-api-auth-client-go/"},{"title":"About","date":"July 19, 2020","description":"A little bit about myself","body":"Introduction Hello, everybody! My name is Andrii, but most people here know me as Ghotfall.\nThe main purpose of this blog is to share interesting stories about my life, work and hobbies!\nSkills    Skill Progress     AWS    Google Cloud    Docker    Kubernetes    Terraform    Service Mesh (AWS App Mesh, Maesh)    GitOps (Flux CD)    GitLab CI/CD    GitHub Action    AWS CodeCommit + CodeBuild + CodeDeploy + CodePipeline    Bash \u0026amp; PowerShell    Go    Java    Kotlin    C++    Selenium     A little bit about myself I am a student from Ukraine, I live in Vinnitsa now. It\u0026rsquo;s not my hometown, my real home is 550 km away from here, near the Black Sea, but now I visit it quite rarely.\nStudy and work I\u0026rsquo;m studying to be a software engineer. I\u0026rsquo;m interested in programming since 8th class, when I started creating simple websites on HTML and CSS. Next two years I was improving my skills: I learned more about JS, PHP, even had some practise with MySQL - all this stuff was used for creating more complex websites.\nBut by the end of 10th class I was a little bit tired of all this \u0026ldquo;web things\u0026rdquo;. In addition, that time was the beggining of wave of JS-frameworks like Angular and React, but I wasn\u0026rsquo;t interested in them. In result, I switched to C++ and had some experience with OpenGL (nothing special, just few hobby projects).\nBy now my main programming languages are Java, Kotlin and Golang. Yes, time changed a lot of stuff. Java and Kotlin are used by me for university projects and development on Android. And Golang is used for my work - I am working as DevOps besides studing in university, so I already have experience with Docker, Kubernetes, AWS, GCP and some other stuff.\nHobbies In free time I like drawing. I have only around a year of experience, but I have already tried both traditional and digital drawing.\nCheck it!\n   View this post on Instagram         A post shared by Andrij Mirgorodskij (@ghotfall) on Jul 19, 2020 at 2:21am PDT\n     View this post on Instagram         A post shared by Andrij Mirgorodskij (@ghotfall) on May 21, 2020 at 9:28am PDT\n  ","ref":"/about/"},{"title":"Contact","date":"July 19, 2020","description":"Ways to find me","body":"Find more on other platforms:  Instagram GitHub GitLab Facebook Reddit Pinterest Telegram  ","ref":"/contact/"}]